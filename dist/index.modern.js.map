{"version":3,"file":"index.modern.js","sources":["../src/datetime/duration_to_seconds.ts","../src/datetime/format_date.ts","../src/datetime/format_date_time.ts","../src/datetime/format_time.ts","../src/datetime/relative_time.ts","../src/datetime/seconds_to_duration.ts","../src/datetime/timer_time_remaining.ts","../src/apply_themes_on_element.ts","../src/compute-card-size.ts","../src/compute-domain.ts","../src/compute-entity.ts","../src/compute-rtl.ts","../src/compute-state-domain.ts","../src/types.ts","../src/format-number.ts","../src/compute-state-display.ts","../src/const.ts","../src/fire-event.ts","../src/create-thing.ts","../src/debounce.ts","../src/domain_icons.ts","../src/evaluate-filter.ts","../src/haptic.ts","../src/navigate.ts","../src/turn-on-off-entity.ts","../src/toggle-entity.ts","../src/handle-action.ts","../src/handle-click.ts","../src/has-action.ts","../src/has-changed.ts","../src/has-double-click.ts","../src/turn-on-off-entities.ts","../src/get-lovelace.ts","../src/sensor_icon.ts","../src/state_icon.ts","../src/binary_sensor_icon.ts","../src/cover_icon.ts","../src/input_datetime_icon.ts"],"sourcesContent":["export function durationToSeconds(duration: string): number {\n  const parts = duration.split(\":\").map(Number);\n  return parts[0] * 3600 + parts[1] * 60 + parts[2];\n}\n","import fecha from \"fecha\";\nimport { FrontendTranslationData } from \"../types\";\n\n// Check for support of native locale string options\nfunction toLocaleDateStringSupportsOptions() {\n  try {\n    new Date().toLocaleDateString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatDate = (toLocaleDateStringSupportsOptions()\n  ? (dateObj: Date, locales: FrontendTranslationData) =>\n      dateObj.toLocaleDateString(locales.language, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"mediumDate\"));\n","import fecha from \"fecha\";\nimport { FrontendTranslationData } from \"../types\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatDateTime = (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: FrontendTranslationData) =>\n      dateObj.toLocaleString(locales.language, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import fecha from \"fecha\";\nimport { FrontendTranslationData } from \"../types\";\n\n// Check for support of native locale string options\nfunction toLocaleTimeStringSupportsOptions() {\n  try {\n    new Date().toLocaleTimeString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatTime = (toLocaleTimeStringSupportsOptions()\n  ? (dateObj: Date, locales: FrontendTranslationData) =>\n      dateObj.toLocaleTimeString(locales.language, {\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"shortTime\"));\n","import { LocalizeFunc } from \"../translations/localize\";\n\n/**\n * Calculate a string representing a date object as relative time from now.\n *\n * Example output: 5 minutes ago, in 3 days.\n */\nconst tests = [60, 60, 24, 7];\nconst langKey = [\"second\", \"minute\", \"hour\", \"day\"];\n\nexport function relativeTime(\n  dateObj: Date,\n  localize: LocalizeFunc,\n  options: {\n    compareTime?: Date;\n    includeTense?: boolean;\n  } = {}\n): string {\n  const compareTime = options.compareTime || new Date();\n  let delta = (compareTime.getTime() - dateObj.getTime()) / 1000;\n  const tense = delta >= 0 ? \"past\" : \"future\";\n  const durationLangKey = options.includeTense === false ? 'duration' : `${tense}_duration`;\n  delta = Math.abs(delta);\n\n  let timeDesc;\n\n  for (let i = 0; i < tests.length; i++) {\n    if (delta < tests[i]) {\n      delta = Math.floor(delta);\n      timeDesc = localize(\n        `ui.components.relative_time.${durationLangKey}.${langKey[i]}`,\n        \"count\",\n        delta\n      );\n      break;\n    }\n\n    delta /= tests[i];\n  }\n\n  if (timeDesc === undefined) {\n    delta = Math.floor(delta);\n    timeDesc = localize(\n      `ui.components.relative_time.${durationLangKey}.week`,\n      \"count\",\n      delta\n    );\n  }\n\n  return timeDesc;\n}\n","const leftPad = (num: number) => (num < 10 ? `0${num}` : num);\n\nexport function secondsToDuration(d: number) {\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return \"\" + s;\n  }\n  return null;\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { durationToSeconds } from \"../datetime/duration_to_seconds\";\n\nexport function timerTimeRemaining(stateObj: HassEntity) {\n  let timeRemaining = durationToSeconds(stateObj.attributes.remaining);\n\n  if (stateObj.state === \"active\") {\n    const now = new Date().getTime();\n    const madeActive = new Date(stateObj.last_changed).getTime();\n    timeRemaining = Math.max(timeRemaining - (now - madeActive) / 1000, 0);\n  }\n\n  return timeRemaining;\n}\n","/**\n * Apply a theme to an element by setting the CSS variables on it.\n *\n * element: Element to apply theme on.\n * themes: HASS Theme information\n * localTheme: selected theme.\n * updateMeta: boolean if we should update the theme-color meta element.\n */\nexport const applyThemesOnElement = (\n  element,\n  themes,\n  localTheme,\n  updateMeta = false\n) => {\n  if (!element._themes) {\n    element._themes = {};\n  }\n  let themeName = themes.default_theme;\n  if (localTheme === \"default\" || (localTheme && themes.themes[localTheme])) {\n    themeName = localTheme;\n  }\n  const styles = { ...element._themes };\n  if (themeName !== \"default\") {\n    const theme = themes.themes[themeName];\n    Object.keys(theme).forEach((key) => {\n      const prefixedKey = \"--\" + key;\n      element._themes[prefixedKey] = \"\";\n      styles[prefixedKey] = theme[key];\n    });\n  }\n  if (element.updateStyles) {\n    element.updateStyles(styles);\n  } else if ((window as any).ShadyCSS) {\n    // implement updateStyles() method of Polemer elements\n    (window as any).ShadyCSS.styleSubtree(/** @type {!HTMLElement} */ (element), styles);\n  }\n\n  if (!updateMeta) {\n    return;\n  }\n\n  const meta = document.querySelector(\"meta[name=theme-color]\");\n  if (meta) {\n    if (!meta.hasAttribute(\"default-content\")) {\n      meta.setAttribute(\"default-content\", meta.getAttribute(\"content\")!);\n    }\n    const themeColor =\n      styles[\"--primary-color\"] || meta.getAttribute(\"default-content\");\n    meta.setAttribute(\"content\", themeColor);\n  }\n}\n","import { LovelaceCard } from \"./types\";\n\nexport const computeCardSize = (card: LovelaceCard): number | Promise<number> => {\n  return typeof card.getCardSize === \"function\" ? card.getCardSize() : 4;\n};","export function computeDomain(entityId: string): string {\n  return entityId.substr(0, entityId.indexOf(\".\"));\n}\n","export function computeEntity(entityId: string): string {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n}\n","import { HomeAssistant } from \"./types\";\n\nexport function computeRTL(hass: HomeAssistant) {\n  const lang = hass.locale.language || \"en\";\n  if (hass.translationMetadata.translations[lang]) {\n    return hass.translationMetadata.translations[lang].isRTL || false;\n  }\n  return false;\n}\n\nexport function computeRTLDirection(hass: HomeAssistant) {\n  return computeRTL(hass) ? \"rtl\" : \"ltr\";\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport function computeStateDomain(stateObj: HassEntity) {\n  return computeDomain(stateObj.entity_id);\n}\n","import {\n  HassEntities,\n  HassConfig,\n  Auth,\n  Connection,\n  MessageBase,\n  HassServices\n} from \"home-assistant-js-websocket\";\nimport { HapticType } from \"./haptic\";\nimport { HASSDomEvent } from \"./fire-event\";\n\nexport interface ToggleMenuActionConfig extends BaseActionConfig {\n  action: \"toggle-menu\";\n  repeat?: number;\n  haptic?: HapticType;\n}\n\nexport interface ToggleActionConfig extends BaseActionConfig {\n  action: \"toggle\";\n  repeat?: number;\n  haptic?: HapticType;\n}\n\nexport interface CallServiceActionConfig extends BaseActionConfig {\n  action: \"call-service\";\n  service: string;\n  service_data?: {\n    entity_id?: string | [string];\n    [key: string]: any;\n  };\n  repeat?: number;\n  haptic?: HapticType;\n}\n\nexport interface NavigateActionConfig extends BaseActionConfig {\n  action: \"navigate\";\n  navigation_path: string;\n  repeat?: number;\n  haptic?: HapticType;\n}\n\nexport interface UrlActionConfig extends BaseActionConfig {\n  action: \"url\";\n  url_path: string;\n  repeat?: number;\n  haptic?: HapticType;\n}\n\nexport interface MoreInfoActionConfig extends BaseActionConfig {\n  action: \"more-info\";\n  entity?: string;\n  repeat?: number;\n  haptic?: HapticType;\n}\n\nexport interface NoActionConfig extends BaseActionConfig {\n  action: \"none\";\n  repeat?: number;\n  haptic?: HapticType;\n}\n\nexport interface CustomActionConfig extends BaseActionConfig {\n  action: \"fire-dom-event\";\n  repeat?: number;\n  haptic?: HapticType;\n}\n\nexport interface BaseActionConfig {\n  confirmation?: ConfirmationRestrictionConfig;\n}\n\nexport interface ConfirmationRestrictionConfig {\n  text?: string;\n  exemptions?: RestrictionConfig[];\n}\n\nexport interface RestrictionConfig {\n  user: string;\n}\n\nexport type ActionConfig =\n  | ToggleActionConfig\n  | CallServiceActionConfig\n  | NavigateActionConfig\n  | UrlActionConfig\n  | MoreInfoActionConfig\n  | NoActionConfig\n  | CustomActionConfig\n  | ToggleMenuActionConfig;\n\nexport interface Window {\n  // Custom panel entry point url\n  customPanelJS: string;\n  ShadyCSS: {\n    nativeCss: boolean;\n    nativeShadow: boolean;\n    prepareTemplate(templateElement, elementName, elementExtension);\n    styleElement(element);\n    styleSubtree(element, overrideProperties);\n    styleDocument(overrideProperties);\n    getComputedStyleValue(element, propertyName);\n  };\n}\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"value-changed\": {\n      value: unknown;\n    };\n    \"config-changed\": {\n      config: any;\n    };\n    \"hass-more-info\": {\n      entityId: string | null;\n    };\n    \"ll-rebuild\": {};\n    \"ll-custom\": {};\n    \"location-changed\": {\n      replace: boolean;\n    };\n    \"show-dialog\": {};\n    undefined;\n    \"action\": {\n      action: string;\n    }\n  }\n}\n\ntype ValidHassDomEvent = keyof HASSDomEvents;\n\nexport type LocalizeFunc = (key: string, ...args: any[]) => string;\n\nexport interface Credential {\n  auth_provider_type: string;\n  auth_provider_id: string;\n}\n\nexport interface MFAModule {\n  id: string;\n  name: string;\n  enabled: boolean;\n}\n\nexport interface CurrentUser {\n  id: string;\n  is_owner: boolean;\n  is_admin: boolean;\n  name: string;\n  credentials: Credential[];\n  mfa_modules: MFAModule[];\n}\n\nexport interface Theme {\n  // Incomplete\n  \"primary-color\": string;\n  \"text-primary-color\": string;\n  \"accent-color\": string;\n}\n\nexport interface Themes {\n  default_theme: string;\n  themes: { [key: string]: Theme };\n}\n\nexport interface Panel {\n  component_name: string;\n  config: { [key: string]: any } | null;\n  icon: string | null;\n  title: string | null;\n  url_path: string;\n}\n\nexport interface Panels {\n  [name: string]: Panel;\n}\n\nexport interface Resources {\n  [language: string]: { [key: string]: string };\n}\n\nexport interface Translation {\n  nativeName: string;\n  isRTL: boolean;\n  fingerprints: { [fragment: string]: string };\n}\n\nexport interface HomeAssistant {\n  auth: Auth;\n  connection: Connection;\n  connected: boolean;\n  states: HassEntities;\n  services: HassServices;\n  config: HassConfig;\n  themes: Themes;\n  selectedTheme?: string | null;\n  panels: Panels;\n  panelUrl: string;\n\n  // i18n\n  // current effective language, in that order:\n  //   - backend saved user selected lanugage\n  //   - language in local appstorage\n  //   - browser language\n  //   - english (en)\n  /**\n  * @deprecated Use `locale.language` instead\n  */\n  language: string;\n  locale? : FrontendTranslationData;\n  // local stored language, keep that name for backward compability\n  selectedLanguage: string;\n  resources: Resources;\n  localize: LocalizeFunc;\n  translationMetadata: {\n    fragments: string[];\n    translations: {\n      [lang: string]: Translation;\n    };\n  };\n\n  dockedSidebar: boolean;\n  moreInfoEntityId: string;\n  user: CurrentUser;\n  callService: (\n    domain: string,\n    service: string,\n    serviceData?: { [key: string]: any }\n  ) => Promise<void>;\n  callApi: <T>(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    parameters?: { [key: string]: any }\n  ) => Promise<T>;\n  fetchWithAuth: (\n    path: string,\n    init?: { [key: string]: any }\n  ) => Promise<Response>;\n  sendWS: (msg: MessageBase) => Promise<void>;\n  callWS: <T>(msg: MessageBase) => Promise<T>;\n}\n\nexport interface LovelaceCardConfig {\n  index?: number;\n  view_index?: number;\n  type: string;\n  [key: string]: any;\n}\n\nexport interface LovelaceCard extends HTMLElement {\n  hass?: HomeAssistant;\n  isPanel?: boolean;\n  editMode?: boolean;\n  getCardSize(): number | Promise<number>;\n  setConfig(config: LovelaceCardConfig): void;\n}\n\nexport interface LovelaceCardEditor extends HTMLElement {\n  hass?: HomeAssistant;\n  lovelace?: LovelaceConfig;\n  setConfig(config: LovelaceCardConfig): void;\n}\n\nexport interface LovelaceConfig {\n  title?: string;\n  views: LovelaceViewConfig[];\n  background?: string;\n}\n\nexport interface LovelaceViewConfig {\n  index?: number;\n  title?: string;\n  badges?: Array<string | LovelaceBadgeConfig>;\n  cards?: LovelaceCardConfig[];\n  path?: string;\n  icon?: string;\n  theme?: string;\n  panel?: boolean;\n  background?: string;\n  visible?: boolean | ShowViewConfig[];\n}\n\nexport interface ShowViewConfig {\n  user?: string;\n}\n\nexport interface LovelaceBadgeConfig {\n  type?: string;\n  [key: string]: any;\n}\n\nexport interface FrontendTranslationData {\n  language: string;\n  number_format: NumberFormat;\n}\n\nexport enum NumberFormat {\n  language = \"language\",\n  system = \"system\",\n  comma_decimal = \"comma_decimal\",\n  decimal_comma = \"decimal_comma\",\n  space_comma = \"space_comma\",\n  none = \"none\",\n}\n\nexport interface ActionHandlerDetail {\n  action: string;\n}\n\nexport type ActionHandlerEvent = HASSDomEvent<ActionHandlerDetail>;\n\nexport interface ActionHandlerOptions {\n  hasHold?: boolean;\n  hasDoubleClick?: boolean;\n}\n\nexport interface EntitiesCardEntityConfig extends EntityConfig {\n  type?: string;\n  secondary_info?:\n    | \"entity-id\"\n    | \"last-changed\"\n    | \"last-triggered\"\n    | \"last-updated\"\n    | \"position\"\n    | \"tilt-position\"\n    | \"brightness\";\n  action_name?: string;\n  service?: string;\n  service_data?: Record<string, unknown>;\n  url?: string;\n  tap_action?: ActionConfig;\n  hold_action?: ActionConfig;\n  double_tap_action?: ActionConfig;\n  state_color?: boolean;\n  show_name?: boolean;\n  show_icon?: boolean;\n}\n\nexport interface EntityConfig {\n  entity: string;\n  type?: string;\n  name?: string;\n  icon?: string;\n  image?: string;\n}\n\nexport interface LovelaceElementConfigBase {\n  type: string;\n  style: Record<string, string>;\n}\n","import { FrontendTranslationData, NumberFormat } from \"./types\";\r\n\r\n/**\r\n * Formats a number based on the specified language with thousands separator(s) and decimal character for better legibility.\r\n * @param num The number to format\r\n * @param locale The user-selected language and number format, from `hass.locale`\r\n * @param options Intl.NumberFormatOptions to use\r\n */\r\nexport const formatNumber = (\r\n  num: string | number,\r\n  locale?: FrontendTranslationData,\r\n  options?: Intl.NumberFormatOptions\r\n): string => {\r\n\r\n  let format: string | string[] | undefined;\r\n\r\n  switch (locale?.number_format) {\r\n    case NumberFormat.comma_decimal:\r\n      format = [\"en-US\", \"en\"]; // Use United States with fallback to English formatting 1,234,567.89\r\n      break;\r\n    case NumberFormat.decimal_comma:\r\n      format = [\"de\", \"es\", \"it\"]; // Use German with fallback to Spanish then Italian formatting 1.234.567,89\r\n      break;\r\n    case NumberFormat.space_comma:\r\n      format = [\"fr\", \"sv\", \"cs\"]; // Use French with fallback to Swedish and Czech formatting 1 234 567,89\r\n      break;\r\n    case NumberFormat.system:\r\n      format = undefined;\r\n      break;\r\n    default:\r\n      format = locale?.language;\r\n  }\r\n  // Polyfill for Number.isNaN, which is more reliable than the global isNaN()\r\n  Number.isNaN =\r\n    Number.isNaN ||\r\n    function isNaN(input) {\r\n      return typeof input === \"number\" && isNaN(input);\r\n    };\r\n\r\n    if (\r\n      !Number.isNaN(Number(num)) &&\r\n      Intl &&\r\n      locale?.number_format !== NumberFormat.none\r\n    ) {\r\n      try {\r\n        return new Intl.NumberFormat(\r\n          format,\r\n          getDefaultFormatOptions(num, options)\r\n        ).format(Number(num));\r\n      } catch (error) {\r\n        // Don't fail when using \"TEST\" language\r\n        // eslint-disable-next-line no-console\r\n        console.error(error);\r\n        return new Intl.NumberFormat(\r\n          undefined,\r\n          getDefaultFormatOptions(num, options)\r\n        ).format(Number(num));\r\n      }\r\n    }\r\n    return num ? num.toString() : \"\";\r\n};\r\n\r\n/**\r\n * Generates default options for Intl.NumberFormat\r\n * @param num The number to be formatted\r\n * @param options The Intl.NumberFormatOptions that should be included in the returned options\r\n */\r\nconst getDefaultFormatOptions = (\r\n  num: string | number,\r\n  options?: Intl.NumberFormatOptions\r\n): Intl.NumberFormatOptions => {\r\n  const defaultOptions: Intl.NumberFormatOptions = options || {};\r\n\r\n  if (typeof num !== \"string\") {\r\n    return defaultOptions;\r\n  }\r\n\r\n  // Keep decimal trailing zeros if they are present in a string numeric value\r\n  if (\r\n    !options ||\r\n    (!options.minimumFractionDigits && !options.maximumFractionDigits)\r\n  ) {\r\n    const digits = num.indexOf(\".\") > -1 ? num.split(\".\")[1].length : 0;\r\n    defaultOptions.minimumFractionDigits = digits;\r\n    defaultOptions.maximumFractionDigits = digits;\r\n  }\r\n\r\n  return defaultOptions;\r\n};\r\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { formatDateTime } from \"./datetime/format_date_time\";\nimport { formatDate } from \"./datetime/format_date\";\nimport { formatTime } from \"./datetime/format_time\";\nimport { LocalizeFunc } from \"./translations/localize\";\nimport { computeStateDomain } from \"./compute-state-domain\";\nimport { FrontendTranslationData } from \"./types\";\nimport { formatNumber } from \"./format-number\";\n\nexport function computeStateDisplay(\n  localize: LocalizeFunc,\n  stateObj: HassEntity,\n  locale: FrontendTranslationData,\n  state?: string\n): string {\n  const compareState = state !== undefined ? state : stateObj.state;\n\n  if (compareState === \"unknown\" || compareState  === \"unavailable\") {\n    return localize(`state.default.${compareState}`);\n  }\n\n  if (stateObj.attributes.unit_of_measurement) {\n    return `${formatNumber(compareState, locale)} ${stateObj.attributes.unit_of_measurement}`;\n  }\n\n  const domain = computeStateDomain(stateObj);\n\n  if (domain === \"input_datetime\") {\n    let date: Date;\n    if (!stateObj.attributes.has_time) {\n      date = new Date(\n        stateObj.attributes.year,\n        stateObj.attributes.month - 1,\n        stateObj.attributes.day\n      );\n      return formatDate(date, locale);\n    }\n    if (!stateObj.attributes.has_date) {\n      const now = new Date();\n      date = new Date(\n        // Due to bugs.chromium.org/p/chromium/issues/detail?id=797548\n        // don't use artificial 1970 year.\n        now.getFullYear(),\n        now.getMonth(),\n        now.getDay(),\n        stateObj.attributes.hour,\n        stateObj.attributes.minute\n      );\n      return formatTime(date, locale);\n    }\n\n    date = new Date(\n      stateObj.attributes.year,\n      stateObj.attributes.month - 1,\n      stateObj.attributes.day,\n      stateObj.attributes.hour,\n      stateObj.attributes.minute\n    );\n    return formatDateTime(date, locale);\n  }\n\n  if (domain === \"humidifier\") {\n    if (compareState === \"on\" && stateObj.attributes.humidity) {\n      return `${stateObj.attributes.humidity} %`;\n    }\n  }\n\n  // `counter` and `number` domains do not have a unit of measurement but should still use `formatNumber`\n  if (domain === \"counter\" || domain === \"number\") {\n    return formatNumber(compareState, locale);\n  }\n\n  return (\n    // Return device class translation\n    (stateObj.attributes.device_class &&\n      localize(\n        `component.${domain}.state.${stateObj.attributes.device_class}.${stateObj.state}`\n      )) ||\n    // Return default translation\n    localize(`component.${domain}.state._.${stateObj.state}`) ||\n    // We don't know! Return the raw state.\n    stateObj.state\n  );\n}\n","/** Constants to be used in the frontend. */\n\n// Constants should be alphabetically sorted by name.\n// Arrays with values should be alphabetically sorted if order doesn't matter.\n// Each constant should have a description what it is supposed to be used for.\n\n/** Icon to use when no icon specified for domain. */\nexport const DEFAULT_DOMAIN_ICON = \"hass:bookmark\";\n\n/** Panel to show when no panel is picked. */\nexport const DEFAULT_PANEL = \"lovelace\";\n\n/** Domains that have a state card. */\nexport const DOMAINS_WITH_CARD = [\n  \"climate\",\n  \"cover\",\n  \"configurator\",\n  \"input_select\",\n  \"input_number\",\n  \"input_text\",\n  \"lock\",\n  \"media_player\",\n  \"scene\",\n  \"script\",\n  \"timer\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weblink\"\n];\n\n/** Domains with separate more info dialog. */\nexport const DOMAINS_WITH_MORE_INFO = [\n  \"alarm_control_panel\",\n  \"automation\",\n  \"camera\",\n  \"climate\",\n  \"configurator\",\n  \"cover\",\n  \"fan\",\n  \"group\",\n  \"history_graph\",\n  \"input_datetime\",\n  \"light\",\n  \"lock\",\n  \"media_player\",\n  \"script\",\n  \"sun\",\n  \"updater\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weather\"\n];\n\n/** Domains that show no more info dialog. */\nexport const DOMAINS_HIDE_MORE_INFO = [\n  \"input_number\",\n  \"input_select\",\n  \"input_text\",\n  \"scene\",\n  \"weblink\"\n];\n\n/** Domains that should have the history hidden in the more info dialog. */\nexport const DOMAINS_MORE_INFO_NO_HISTORY = [\n  \"camera\",\n  \"configurator\",\n  \"history_graph\",\n  \"scene\"\n];\n\n/** States that we consider \"off\". */\nexport const STATES_OFF = [\"closed\", \"locked\", \"off\"];\n\n/** Domains where we allow toggle in Lovelace. */\nexport const DOMAINS_TOGGLE = new Set([\n  \"fan\",\n  \"input_boolean\",\n  \"light\",\n  \"switch\",\n  \"group\",\n  \"automation\"\n]);\n\n/** Temperature units. */\nexport const UNIT_C = \"°C\";\nexport const UNIT_F = \"°F\";\n\n/** Entity ID of the default view. */\nexport const DEFAULT_VIEW_ENTITY_ID = \"group.default_view\";\n","// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\ndeclare global {\n  // tslint:disable-next-line\n  interface HASSDomEvents {}\n}\n\nexport type ValidHassDomEvent = keyof HASSDomEvents;\n\nexport interface HASSDomEvent<T> extends Event {\n  detail: T;\n}\n\n/**\n * Dispatches a custom event with an optional detail value.\n *\n * @param {string} type Name of event type.\n * @param {*=} detail Detail value containing event-specific\n *   payload.\n * @param {{ bubbles: (boolean|undefined),\n *           cancelable: (boolean|undefined),\n *           composed: (boolean|undefined) }=}\n *  options Object specifying options.  These may include:\n *  `bubbles` (boolean, defaults to `true`),\n *  `cancelable` (boolean, defaults to false), and\n *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n * @return {Event} The new event that was fired.\n */\nexport const fireEvent = <HassEvent extends ValidHassDomEvent>(\n  node: HTMLElement | Window,\n  type: HassEvent,\n  detail?: HASSDomEvents[HassEvent],\n  options?: {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n  }\n) => {\n  options = options || {};\n  // @ts-ignore\n  detail = detail === null || detail === undefined ? {} : detail;\n  const event = new Event(type, {\n    bubbles: options.bubbles === undefined ? true : options.bubbles,\n    cancelable: Boolean(options.cancelable),\n    composed: options.composed === undefined ? true : options.composed\n  });\n  (event as any).detail = detail;\n  node.dispatchEvent(event);\n  return event;\n};\n","import { fireEvent } from \"./fire-event\";\n\nconst SPECIAL_TYPES = new Set([\n  \"call-service\",\n  \"divider\",\n  \"section\",\n  \"weblink\",\n  \"cast\",\n  \"select\"\n]);\nconst DOMAIN_TO_ELEMENT_TYPE = {\n  alert: \"toggle\",\n  automation: \"toggle\",\n  climate: \"climate\",\n  cover: \"cover\",\n  fan: \"toggle\",\n  group: \"group\",\n  input_boolean: \"toggle\",\n  input_number: \"input-number\",\n  input_select: \"input-select\",\n  input_text: \"input-text\",\n  light: \"toggle\",\n  lock: \"lock\",\n  media_player: \"media-player\",\n  remote: \"toggle\",\n  scene: \"scene\",\n  script: \"script\",\n  sensor: \"sensor\",\n  timer: \"timer\",\n  switch: \"toggle\",\n  vacuum: \"toggle\",\n  // Temporary. Once climate is rewritten,\n  // water heater should get it's own row.\n  water_heater: \"climate\",\n  input_datetime: \"input-datetime\"\n};\n\nexport const createThing = (cardConfig, isRow = false) => {\n  const _createError = (error, config) => {\n    return _createThing(\n      \"hui-error-card\",\n      {\n        type: \"error\",\n        error,\n        config\n      }\n    );\n  };\n\n  const _createThing = (tag, config) => {\n    const element = window.document.createElement(tag);\n    try {\n      element.setConfig(config);\n    } catch (err) {\n      console.error(tag, err);\n      return _createError(err.message, config);\n    }\n    return element;\n  };\n\n  if (!cardConfig || typeof cardConfig !== \"object\" || (!isRow && !cardConfig.type))\n    return _createError(\"No type defined\", cardConfig);\n  let tag = cardConfig.type;\n  if (tag && tag.startsWith(\"custom:\")) {\n    tag = tag.substr(\"custom:\".length);\n  } else if (isRow) {\n    if (SPECIAL_TYPES.has(tag)) {\n      tag = `hui-${tag}-row`;\n    } else {\n      if (!cardConfig.entity) {\n        return _createError(\"Invalid config given.\", cardConfig);\n      }\n    \n      const domain = cardConfig.entity.split(\".\", 1)[0];\n      tag = `hui-${DOMAIN_TO_ELEMENT_TYPE[domain] || \"text\"}-entity-row`;\n    }\n  } else {\n    tag = `hui-${tag}-card`;\n  }\n\n  if (customElements.get(tag)) return _createThing(tag, cardConfig);\n\n  // If element doesn't exist (yet) create an error\n  const element = _createError(\n    `Custom element doesn't exist: ${cardConfig.type}.`,\n    cardConfig\n  );\n  element.style.display = \"None\";\n  const timer = setTimeout(() => {\n    element.style.display = \"\";\n  }, 2000);\n  // Remove error if element is defined later\n  customElements.whenDefined(cardConfig.type).then(() => {\n    clearTimeout(timer);\n    fireEvent(element, \"ll-rebuild\", {}, element);\n  });\n\n  return element;\n};\n","/**\r\n * Returns a function, that, as long as it continues to be invoked, will not be triggered. It will be called after it stops being called for `wait` ms.\r\n * This can be usefull for ResizeObservers for example.\r\n * @param func The function you want to debounce\r\n * @param wait Period to wait in ms\r\n * @param immediate Triggering on the leading edge instead of the trailing\r\n * @returns Debounced Function\r\n */\r\n// eslint-disable-next-line: ban-types\r\nexport const debounce = <T extends (...args) => unknown>(\r\n  func: T,\r\n  wait: number,\r\n  immediate = false\r\n): T => {\r\n  let timeout;\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  return function (...args) {\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    const context = this;\r\n    const later = () => {\r\n      timeout = null;\r\n      if (!immediate) {\r\n        func.apply(context, args);\r\n      }\r\n    };\r\n    const callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) {\r\n      func.apply(context, args);\r\n    }\r\n  };\r\n};\r\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"./const\";\n\nexport const fixedIcons = {\n  alert: \"hass:alert\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weblink: \"hass:open-in-new\"\n};\n\nexport function domainIcon(domain: string, state?: string): string {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const evaluateFilter = (stateObj: HassEntity, filter: any): boolean => {\n  const operator = filter.operator || \"==\";\n  const value = filter.value || filter;\n  const state = filter.attribute\n    ? stateObj.attributes[filter.attribute]\n    : stateObj.state;\n\n  switch (operator) {\n    case \"==\":\n      return state === value;\n    case \"<=\":\n      return state <= value;\n    case \"<\":\n      return state < value;\n    case \">=\":\n      return state >= value;\n    case \">\":\n      return state > value;\n    case \"!=\":\n      return state !== value;\n    case \"regex\": {\n      return state.match(value);\n    }\n    default:\n      return false;\n  }\n};\n","import { HASSDomEvent, fireEvent } from \"./fire-event\";\n\n/**\n * Broadcast haptic feedback requests\n */\n\n\n// Allowed types are from iOS HIG.\n// https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/feedback/#haptics\n// Implementors on platforms other than iOS should attempt to match the patterns (shown in HIG) as closely as possible.\nexport type HapticType =\n  | \"success\"\n  | \"warning\"\n  | \"failure\"\n  | \"light\"\n  | \"medium\"\n  | \"heavy\"\n  | \"selection\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    haptic: HapticType;\n  }\n\n  interface GlobalEventHandlersEventMap {\n    haptic: HASSDomEvent<HapticType>;\n  }\n}\n\nexport const forwardHaptic = (hapticType: HapticType) => {\n  fireEvent(window, \"haptic\", hapticType);\n};\n","import { fireEvent } from \"./fire-event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"location-changed\": {\n      replace: boolean;\n    };\n  }\n}\n\nexport const navigate = (\n  _node: any,\n  path: string,\n  replace: boolean = false\n) => {\n  if (replace) {\n    history.replaceState(null, \"\", path);\n  } else {\n    history.pushState(null, \"\", path);\n  }\n  fireEvent(window, \"location-changed\", {\n    replace\n  });\n};\n","import { HomeAssistant } from \"./types\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport const turnOnOffEntity = (\n  hass: HomeAssistant,\n  entityId: string,\n  turnOn = true\n): Promise<void> => {\n  const stateDomain = computeDomain(entityId);\n  const serviceDomain = stateDomain === \"group\" ? \"homeassistant\" : stateDomain;\n\n  let service;\n  switch (stateDomain) {\n    case \"lock\":\n      service = turnOn ? \"unlock\" : \"lock\";\n      break;\n    case \"cover\":\n      service = turnOn ? \"open_cover\" : \"close_cover\";\n      break;\n    default:\n      service = turnOn ? \"turn_on\" : \"turn_off\";\n  }\n\n  return hass.callService(serviceDomain, service, { entity_id: entityId });\n};\n","import { STATES_OFF } from \"./const\";\nimport { turnOnOffEntity } from \"./turn-on-off-entity\";\nimport { HomeAssistant } from \"./types\";\n\nexport const toggleEntity = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<void> => {\n  const turnOn = STATES_OFF.includes(hass.states[entityId].state);\n  return turnOnOffEntity(hass, entityId, turnOn);\n};\n","import { HomeAssistant, ActionConfig } from \"./types\";\nimport { forwardHaptic } from \"./haptic\";\nimport { fireEvent } from \"./fire-event\";\nimport { navigate } from \"./navigate\";\nimport { toggleEntity } from \"./toggle-entity\";\n\nexport const handleActionConfig = (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: {\n    entity?: string;\n    camera_image?: string;\n    hold_action?: ActionConfig;\n    tap_action?: ActionConfig;\n    double_tap_action?: ActionConfig;\n  },\n  actionConfig: ActionConfig | undefined\n): void => {\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\",\n    };\n  }\n\n  if (\n    actionConfig.confirmation &&\n    (!actionConfig.confirmation.exemptions ||\n      !actionConfig.confirmation.exemptions.some(\n        (e) => e.user === hass!.user!.id\n      ))\n  ) {\n    forwardHaptic(\"warning\");\n\n    if (\n      !confirm(\n        actionConfig.confirmation.text ||\n          `Are you sure you want to ${actionConfig.action}?`\n      )\n    ) {\n      return;\n    }\n  }\n\n  switch (actionConfig.action) {\n    case \"more-info\":\n      if (config.entity || config.camera_image) {\n        fireEvent(node, \"hass-more-info\", {\n          entityId: config.entity ? config.entity : config.camera_image!,\n        });\n      }\n      break;\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(node, actionConfig.navigation_path);\n      }\n      break;\n    case \"url\":\n      if (actionConfig.url_path) {\n        window.open(actionConfig.url_path);\n      }\n      break;\n    case \"toggle\":\n      if (config.entity) {\n        toggleEntity(hass, config.entity!);\n        forwardHaptic(\"success\");\n      }\n      break;\n    case \"call-service\": {\n      if (!actionConfig.service) {\n        forwardHaptic(\"failure\");\n        return;\n      }\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      hass.callService(domain, service, actionConfig.service_data);\n      forwardHaptic(\"success\");\n      break;\n    }\n    case \"fire-dom-event\": {\n      fireEvent(node, \"ll-custom\", actionConfig);\n    }\n  }\n};\n\nexport const handleAction = (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: {\n    entity?: string;\n    camera_image?: string;\n    hold_action?: ActionConfig;\n    tap_action?: ActionConfig;\n    double_tap_action?: ActionConfig;\n  },\n  action: string\n): void => {\n  let actionConfig: ActionConfig | undefined;\n\n  if (action === \"double_tap\" && config.double_tap_action) {\n    actionConfig = config.double_tap_action;\n  } else if (action === \"hold\" && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (action === \"tap\" && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n\n  handleActionConfig(node, hass, config, actionConfig);\n};\n","import { HomeAssistant, ActionConfig } from \"./types\";\nimport { fireEvent } from \"./fire-event\";\nimport { forwardHaptic } from \"./haptic\";\nimport { navigate } from \"./navigate\";\nimport { toggleEntity } from \"./toggle-entity\";\n\nexport const handleClick = (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: {\n    entity?: string;\n    camera_image?: string;\n    hold_action?: ActionConfig;\n    tap_action?: ActionConfig;\n    double_tap_action?: ActionConfig;\n  },\n  hold: boolean,\n  dblClick: boolean\n): void => {\n  let actionConfig: ActionConfig | undefined;\n\n  if (dblClick && config.double_tap_action) {\n    actionConfig = config.double_tap_action;\n  } else if (hold && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (!hold && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\"\n    };\n  }\n\n  if (\n    actionConfig.confirmation &&\n    (!actionConfig.confirmation.exemptions ||\n      !actionConfig.confirmation.exemptions.some(\n        e => e.user === hass!.user!.id\n      ))\n  ) {\n    if (\n      !confirm(\n        actionConfig.confirmation.text ||\n          `Are you sure you want to ${actionConfig.action}?`\n      )\n    ) {\n      return;\n    }\n  }\n\n  switch (actionConfig.action) {\n    case \"more-info\":\n      if (actionConfig.entity || config.entity || config.camera_image) {\n        fireEvent(node, \"hass-more-info\", {\n          entityId: actionConfig.entity\n            ? actionConfig.entity\n            : config.entity\n            ? config.entity\n            : config.camera_image\n        });\n        if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      }\n      break;\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(node, actionConfig.navigation_path);\n        if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      }\n      break;\n    case \"url\":\n      actionConfig.url_path && window.open(actionConfig.url_path);\n      if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      break;\n    case \"toggle\":\n      if (config.entity) {\n        toggleEntity(hass, config.entity!);\n        if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      }\n      break;\n    case \"call-service\": {\n      if (!actionConfig.service) {\n        return;\n      }\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      const serviceData = { ...actionConfig.service_data };\n      if (serviceData.entity_id === \"entity\") {\n        serviceData.entity_id = config.entity;\n      }\n      hass.callService(domain, service, serviceData);\n      if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      break;\n    }\n    case \"fire-dom-event\": {\n      fireEvent(node, \"ll-custom\", actionConfig);\n      if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      break;\n    }\n  }\n};\n","import { ActionConfig } from \"./types\";\n\nexport function hasAction(config?: ActionConfig): boolean {\n  return config !== undefined && config.action !== \"none\";\n}\n","import { PropertyValues } from \"lit-element\";\n\nimport { HomeAssistant } from \"./types\";\n\n// Check if config or Entity changed\nexport function hasConfigOrEntityChanged(\n  element: any,\n  changedProps: PropertyValues,\n  forceUpdate: Boolean,\n): boolean {\n  if (changedProps.has('config') || forceUpdate) {\n    return true;\n  }\n\n  if (element.config!.entity) {\n    const oldHass = changedProps.get('hass') as HomeAssistant | undefined;\n    if (oldHass) {\n      return (\n        oldHass.states[element.config!.entity]\n        !== element.hass!.states[element.config!.entity]\n      );\n    }\n    return true;\n  } else {\n    return false;\n  }\n}","import { ActionConfig } from \"./types\";\n\n// Check if config or Entity changed\nexport function hasDoubleClick(config?: ActionConfig): boolean {\n  return config !== undefined && config.action !== \"none\";\n}","import { HomeAssistant } from \"./types\";\nimport { STATES_OFF } from \"./const\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport const turnOnOffEntities = (\n  hass: HomeAssistant,\n  entityIds: string[],\n  turnOn = true\n): void => {\n  const domainsToCall = {};\n  entityIds.forEach((entityId) => {\n    if (STATES_OFF.includes(hass.states[entityId].state) === turnOn) {\n      const stateDomain = computeDomain(entityId);\n      const serviceDomain = [\"cover\", \"lock\"].includes(stateDomain)\n        ? stateDomain\n        : \"homeassistant\";\n\n      if (!(serviceDomain in domainsToCall)) {\n        domainsToCall[serviceDomain] = [];\n      }\n      domainsToCall[serviceDomain].push(entityId);\n    }\n  });\n\n  Object.keys(domainsToCall).forEach((domain) => {\n    let service;\n    switch (domain) {\n      case \"lock\":\n        service = turnOn ? \"unlock\" : \"lock\";\n        break;\n      case \"cover\":\n        service = turnOn ? \"open_cover\" : \"close_cover\";\n        break;\n      default:\n        service = turnOn ? \"turn_on\" : \"turn_off\";\n    }\n\n    const entities = domainsToCall[domain];\n    hass.callService(domain, service, { entity_id: entities });\n  });\n};\n","export const getLovelace = () => {\n    let root: any = document.querySelector('home-assistant');\n    root = root && root.shadowRoot;\n    root = root && root.querySelector('home-assistant-main');\n    root = root && root.shadowRoot;\n    root = root && root.querySelector('app-drawer-layout partial-panel-resolver');\n    root = root && root.shadowRoot || root;\n    root = root && root.querySelector('ha-panel-lovelace');\n    root = root && root.shadowRoot;\n    root = root && root.querySelector('hui-root');\n    if (root) {\n        const ll = root.lovelace;\n        ll.current_view = root.___curView;\n        return ll;\n    }\n    return null;\n}\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"./const\";\nimport { domainIcon } from \"./domain_icons\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport const sensorIcon = (state: HassEntity) => {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute-domain\";\nimport { DEFAULT_DOMAIN_ICON } from \"./const\";\nimport { binarySensorIcon } from \"./binary_sensor_icon\";\nimport { coverIcon } from \"./cover_icon\";\nimport { sensorIcon } from \"./sensor_icon\";\nimport { inputDateTimeIcon } from \"./input_datetime_icon\";\nimport { domainIcon } from \"./domain_icons\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport const stateIcon = (state: HassEntity) => {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport const binarySensorIcon = (state: HassEntity) => {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n};\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { domainIcon } from \"./domain_icons\";\n\nexport const coverIcon = (state: HassEntity): string => {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    case \"door\":\n      return open ? \"hass:door-open\" : \"hass:door-closed\";\n    case \"shutter\":\n      return open ? \"hass:window-shutter-open\" : \"hass:window-shutter\";\n    case \"blind\":\n      return open ? \"hass:blinds-open\" : \"hass:blinds\";\n    case \"window\":\n      return open ? \"hass:window-open\" : \"hass:window-closed\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n};\n","/** Return an icon representing an input datetime state. */\nimport { domainIcon } from \"./domain_icons\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const inputDateTimeIcon = (state: HassEntity): string => {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n};\n"],"names":["durationToSeconds","duration","parts","split","map","Number","formatDate","Date","toLocaleDateString","e","name","toLocaleDateStringSupportsOptions","dateObj","locales","language","year","month","day","fecha","format","formatDateTime","toLocaleString","toLocaleStringSupportsOptions","hour","minute","formatTime","toLocaleTimeString","toLocaleTimeStringSupportsOptions","tests","langKey","relativeTime","localize","options","delta","compareTime","getTime","durationLangKey","includeTense","timeDesc","Math","abs","i","length","floor","undefined","leftPad","num","secondsToDuration","d","h","m","s","timerTimeRemaining","stateObj","timeRemaining","attributes","remaining","state","now","madeActive","last_changed","max","applyThemesOnElement","element","themes","localTheme","updateMeta","_themes","themeName","default_theme","styles","theme","Object","keys","forEach","key","prefixedKey","updateStyles","window","ShadyCSS","styleSubtree","meta","document","querySelector","hasAttribute","setAttribute","getAttribute","themeColor","computeCardSize","card","getCardSize","computeDomain","entityId","substr","indexOf","computeEntity","computeRTL","hass","lang","locale","translationMetadata","translations","isRTL","computeRTLDirection","computeStateDomain","entity_id","NumberFormat","formatNumber","number_format","comma_decimal","decimal_comma","space_comma","system","isNaN","input","Intl","none","getDefaultFormatOptions","error","console","toString","defaultOptions","minimumFractionDigits","maximumFractionDigits","digits","computeStateDisplay","compareState","unit_of_measurement","domain","date","has_time","has_date","getFullYear","getMonth","getDay","humidity","device_class","DEFAULT_DOMAIN_ICON","DEFAULT_PANEL","DOMAINS_WITH_CARD","DOMAINS_WITH_MORE_INFO","DOMAINS_HIDE_MORE_INFO","DOMAINS_MORE_INFO_NO_HISTORY","STATES_OFF","DOMAINS_TOGGLE","Set","UNIT_C","UNIT_F","DEFAULT_VIEW_ENTITY_ID","fireEvent","node","type","detail","event","Event","bubbles","cancelable","Boolean","composed","dispatchEvent","SPECIAL_TYPES","DOMAIN_TO_ELEMENT_TYPE","alert","automation","climate","cover","fan","group","input_boolean","input_number","input_select","input_text","light","lock","media_player","remote","scene","script","sensor","timer","switch","vacuum","water_heater","input_datetime","createThing","cardConfig","isRow","_createError","config","_createThing","tag","createElement","setConfig","err","message","startsWith","has","entity","customElements","get","style","display","setTimeout","whenDefined","then","clearTimeout","debounce","func","wait","immediate","timeout","args","context","this","callNow","apply","fixedIcons","calendar","camera","configurator","conversation","device_tracker","history_graph","homeassistant","homekit","image_processing","mailbox","notify","person","plant","proximity","simple_alarm","sun","updater","weblink","domainIcon","warn","evaluateFilter","filter","value","attribute","operator","match","forwardHaptic","hapticType","navigate","_node","path","replace","history","replaceState","pushState","turnOnOffEntity","turnOn","stateDomain","serviceDomain","service","callService","toggleEntity","includes","states","handleActionConfig","actionConfig","action","confirmation","exemptions","some","user","id","confirm","text","camera_image","navigation_path","url_path","open","service_data","handleAction","double_tap_action","hold_action","tap_action","handleClick","hold","dblClick","haptic","serviceData","hasAction","hasConfigOrEntityChanged","changedProps","forceUpdate","oldHass","hasDoubleClick","turnOnOffEntities","entityIds","domainsToCall","push","getLovelace","root","shadowRoot","ll","lovelace","current_view","___curView","fixedDeviceClassIcons","illuminance","temperature","pressure","power","signal_strength","domainIcons","binary_sensor","activated","dclass","battery","batteryRound","round","unit","stateIcon","icon"],"mappings":"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"}